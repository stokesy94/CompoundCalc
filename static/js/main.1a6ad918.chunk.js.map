{"version":3,"sources":["Results.js","Compound.js","App.js","index.js"],"names":["Results","props","className","type","step","value","EBY","EBM","SA","TC","TI","Compound","state","StartingAmount","Period","InterestRate","Contributions","changeSAHandler","bind","changePHandler","changeIRHandler","changeCHandler","e","this","setState","target","FinalValue","Math","pow","Yearly","min","max","onChange","v","Monthly","toFixed","totalInterest","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAgCeA,G,MA7BC,SAACC,GAEb,OACA,6BACI,yBAAKC,UAAU,UACX,wCAGJ,yBAAKA,UAAU,YACX,wBAAIA,UAAU,WAAd,eACA,6BAAK,iDAA0B,2BAAOC,KAAK,SAASC,KAAK,KAAKC,MAAOJ,EAAMK,OAC3E,6BAAK,kDAAL,IAAiC,2BAAOH,KAAK,SAASC,KAAK,KAAKC,MAAOJ,EAAMM,QAE7E,wBAAIL,UAAU,WAAd,mBACA,6BAAK,2BAAOC,KAAK,OAAOE,MAAOJ,EAAMO,KAArC,MAEA,wBAAIN,UAAU,WAAd,uBACA,6BAAK,2BAAOC,KAAK,OAAOE,MAAOJ,EAAMQ,OAErC,wBAAIP,UAAU,WAAd,kBACA,6BAAK,2BAAOC,KAAK,OAAOE,MAAOJ,EAAMS,WCoFlCC,G,wDAtGX,WAAYV,GAAQ,IAAD,8BACf,cAAMA,IACDW,MAAQ,CACTC,eAAgB,EAChBC,OAAQ,EACRC,aAAc,EACdC,cAAe,GAEnB,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBACtB,EAAKE,gBAAkB,EAAKA,gBAAgBF,KAArB,gBACvB,EAAKG,eAAiB,EAAKA,eAAeH,KAApB,gBAXP,E,4DAgBHI,GACZC,KAAKC,SAAS,CAACX,eAAgBS,EAAEG,OAAOpB,U,qCAG7BiB,GACXC,KAAKC,SAAS,CAACV,OAAQQ,EAAEG,OAAOpB,U,sCAGpBiB,GACZC,KAAKC,SAAS,CAACT,aAAcO,EAAEG,OAAOpB,U,qCAG3BiB,GACXC,KAAKC,SAAS,CAACR,cAAeM,EAAEG,OAAOpB,U,sCAE3BiB,GACZC,KAAKC,SAAS,CAACE,WAAYJ,EAAEG,OAAOpB,U,+BAOpC,OAHakB,KAAKX,MAAMC,eAAiB,EAAIc,KAAKC,IAAK,EAAIL,KAAKX,MAAMG,aAAe,IAAM,EAAI,EAAIQ,KAAKX,MAAME,QACvE,GAA3BS,KAAKX,MAAMI,cAAmB,IAAMW,KAAKC,IAAK,EAAIL,KAAKX,MAAMG,aAAe,IAAM,EAAI,EAAIQ,KAAKX,MAAME,QAAU,IAAMS,KAAKX,MAAMG,aAAe,IAAM,M,gCASjK,OAHcQ,KAAKX,MAAMC,eAAiB,EAAIc,KAAKC,IAAK,EAAIL,KAAKX,MAAMG,aAAe,IAAM,GAAK,GAAKQ,KAAKX,MAAME,QACnGS,KAAKX,MAAMI,cAAgB,IAAOW,KAAKC,IAAK,EAAIL,KAAKX,MAAMG,aAAe,IAAM,GAAK,GAAKQ,KAAKX,MAAME,QAAU,IAAMS,KAAKX,MAAMG,aAAe,IAAM,O,sCAQnK,OAFYQ,KAAKM,UAAYN,KAAKX,MAAMC,eAAe,EAAgC,GAA3BU,KAAKX,MAAMI,cAAqBO,KAAKX,MAAME,U,+BAUvG,OAEI,yBAAKZ,UAAU,YACX,yBAAKA,UAAU,UACf,wBAAIA,UAAU,UAAd,mBACI,yBAAKA,UAAU,WACX,2BAAOC,KAAK,QAAQC,KAAK,KAAK0B,IAAI,IAAIC,IAAI,SAAS1B,MAAOkB,KAAKX,MAAMC,eAAgBmB,SAAUT,KAAKN,gBAAiBf,UAAU,UAC/H,2BAAOC,KAAK,SAASE,MAAOkB,KAAKX,MAAMC,mBAG/C,wBAAIX,UAAU,SAAQ+B,GAAC,GAAvB,kBACI,yBAAK/B,UAAU,WACV,2BAAOC,KAAK,QAAQC,KAAK,IAAI0B,IAAI,IAAIC,IAAI,KAAK1B,MAAOkB,KAAKX,MAAME,OAAQkB,SAAUT,KAAKJ,eAAgBjB,UAAU,UACjH,2BAAOC,KAAK,SAASE,MAAOkB,KAAKX,MAAME,WAGhD,wBAAIZ,UAAU,UAAd,qBACI,yBAAKA,UAAU,WACX,2BAAOC,KAAK,QAAQC,KAAK,KAAK0B,IAAI,IAAIC,IAAI,KAAK1B,MAAOkB,KAAKX,MAAMG,aAAciB,SAAUT,KAAKH,gBAAiBlB,UAAU,UACzH,2BAAOC,KAAK,SAASE,MAAOkB,KAAKX,MAAMG,iBAG/C,wBAAIb,UAAU,UAAd,2BACI,yBAAKA,UAAU,WACX,2BAAOC,KAAK,QAAQC,KAAK,IAAI0B,IAAI,IAAIC,IAAI,OAAO1B,MAAOkB,KAAKX,MAAMI,cAAegB,SAAUT,KAAKF,eAAgBnB,UAAU,UAC1H,2BAAOC,KAAK,SAASE,MAAOkB,KAAKX,MAAMI,mBAO/C,6BACI,kBAAC,EAAD,CAAST,IAAKgB,KAAKW,UAAUC,QAAQ,GAAI7B,IAAKiB,KAAKM,SAASM,QAAQ,GAAI3B,GAAIe,KAAKX,MAAMC,eAAgBJ,GAA+B,GAA3Bc,KAAKX,MAAMI,cAAqBO,KAAKX,MAAME,OAAQJ,GAAIa,KAAKa,gBAAgBD,QAAQ,W,GA9F5LE,c,MCaRC,MAXf,WACE,OACM,yBAAKpC,UAAU,aACX,yBAAKA,UAAU,kBACX,wBAAIA,UAAU,WAAd,gCACA,kBAAC,EAAD,SCNhBqC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.1a6ad918.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Results.css\"\n\nconst Results = (props) => {\n\n    return(\n    <div>\n        <div className=\"header\">\n            <h1>Results</h1>\n        </div>\n\n        <div className=\"crumpets\">\n            <h2 className=\"littleh\">End Balance:\n            <div><h3>Yearly Compounded</h3><input type=\"number\" step=\".1\" value={props.EBY} /></div>\n            <div><h3>Monthly Compounded</h3> <input type=\"number\" step=\".1\" value={props.EBM} /></div></h2>\n\n            <h2 className=\"littleh\">Starting Amount:\n            <div><input type=\"text\" value={props.SA} /> </div></h2>\n\n            <h2 className=\"littleh\">Total Contributions:\n            <div><input type=\"text\" value={props.TC} /></div></h2>\n\n            <h2 className=\"littleh\">Total Interest:\n            <div><input type=\"text\" value={props.TI} /></div></h2>\n\n            {/*<h2 className=\"littleh\">Amount Needed: </h2>*/}\n            {/*<div><input type=\"text\" value={props.FV} /></div>*/}\n        </div>\n    </div>\n    )\n}\n\nexport default Results;","import React, { Component } from \"react\";\nimport Results from \"./Results\";\nimport \"./Compound.css\"\n\nclass Compound extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            StartingAmount: 0,\n            Period: 0,\n            InterestRate: 0,\n            Contributions: 0,\n        }\n        this.changeSAHandler = this.changeSAHandler.bind(this);\n        this.changePHandler = this.changePHandler.bind(this);\n        this.changeIRHandler = this.changeIRHandler.bind(this);\n        this.changeCHandler = this.changeCHandler.bind(this);\n\n\n    }\n\n    changeSAHandler(e) {\n        this.setState({StartingAmount: e.target.value});\n    }\n\n    changePHandler(e) {\n        this.setState({Period: e.target.value});\n    }\n\n    changeIRHandler(e) {\n        this.setState({InterestRate: e.target.value});\n    }\n\n    changeCHandler(e) {\n        this.setState({Contributions: e.target.value});\n    }\n    changeFVHandler(e) {\n        this.setState({FinalValue: e.target.value});\n    }\n\n    Yearly() {\n        const one = (this.state.StartingAmount / 1 * Math.pow((1 + this.state.InterestRate / 100 / 1), 1 * this.state.Period));\n        const two = this.state.Contributions * 12/1 * ((Math.pow((1 + this.state.InterestRate / 100 / 1), 1 * this.state.Period) - 1) / (this.state.InterestRate / 100 / 1));\n\n        return one + two;\n    }\n\n    Monthly() {\n        const four = (this.state.StartingAmount / 1 * Math.pow((1 + this.state.InterestRate / 100 / 12), 12 * this.state.Period));\n        const five = (this.state.Contributions / 1) * ((Math.pow((1 + this.state.InterestRate / 100 / 12), 12 * this.state.Period) - 1) / (this.state.InterestRate / 100 / 12));\n\n        return four + five;\n    }\n\n    totalInterest() {\n        let three = this.Yearly() - (this.state.StartingAmount/1 + (this.state.Contributions * 12 * this.state.Period))\n\n        return three;\n        }\n\n\n\n\n    render () {\n\n        return (\n\n            <div className=\"Compound\">\n                <div className=\"inputs\">\n                <h2 className=\"slideh\">Starting Amount:\n                    <div className=\"sliders\">\n                        <input type=\"range\" step=\"10\" min=\"0\" max=\"100000\" value={this.state.StartingAmount} onChange={this.changeSAHandler} className=\"slide\" />\n                        <input type=\"number\" value={this.state.StartingAmount} />\n                    </div>\n                </h2>\n                <h2 className=\"slideh\"v>Period (years):\n                    <div className=\"sliders\">\n                         <input type=\"range\" step=\"1\" min=\"0\" max=\"60\" value={this.state.Period} onChange={this.changePHandler} className=\"slide\" />\n                         <input type=\"number\" value={this.state.Period} />\n                    </div>\n                </h2>\n                <h2 className=\"slideh\">Interest Rate: (%)\n                    <div className=\"sliders\">\n                        <input type=\"range\" step=\".1\" min=\"0\" max=\"10\" value={this.state.InterestRate} onChange={this.changeIRHandler} className=\"slide\" />\n                        <input type=\"number\" value={this.state.InterestRate} />\n                    </div>\n                </h2>\n                <h2 className=\"slideh\">Contributions (monthly):\n                    <div className=\"sliders\">\n                        <input type=\"range\" step=\"1\" min=\"0\" max=\"2000\" value={this.state.Contributions} onChange={this.changeCHandler} className=\"slide\" />\n                        <input type=\"number\" value={this.state.Contributions} />\n                    </div>\n                </h2>\n\n\n                </div>\n\n                <div>\n                    <Results EBM={this.Monthly().toFixed(2)} EBY={this.Yearly().toFixed(2)} SA={this.state.StartingAmount} TC={this.state.Contributions * 12 * this.state.Period} TI={this.totalInterest().toFixed(2)}  />\n                </div>\n            </div>\n\n\n        )\n    }\n}\n\nexport default Compound;","import React, { Component } from 'react';\nimport Compound from \"./Compound\";\nimport \"./App.css\"\n\n\n\nfunction App() {\n  return (\n        <div className=\"container\">\n            <div className=\"innercontainer\">\n                <h2 className=\"Heading\">Compound Interest Calculator</h2>\n                <Compound />\n            </div>\n        </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}